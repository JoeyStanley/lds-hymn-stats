---
title: "How many unique hymns does a ward sing in a year?"
description: "Let's say you're an ambitious music coordinator and you want to sing as many different hymns as possible. How many could you get through in a year? How many hymns do wards typically get through in a year?"
author: "Joey Stanley"
date: 9/10/23
date-modified: 10/20/23
alises:
    "/posts/unique_hymns_per_year"
categories:
  - general
---

```{r, include = FALSE}
knitr::opts_chunk$set(include = FALSE,
                      fig.width = 6.5)
rmarkdown::render("../../_scripts/analysis_functions.Rmd")
```

## How many hymns *could* a ward sing per year?

I was talking to someone about this project, and they said something like, "Our ward does a good job at singing unusual hymns. We probably get through the entire hymnal every year." I can tell you now that's impossible. Let's explore that a little bit.

There are 52 weeks in a year.[Okay, some years have 53 Sundays, but for simplicity, we'll keep it at 52]{.aside} Subtract two for General Conference and subtract two for Stake Conference. You're left with 48 sacrament meetings per year.[For what it's worth, I assume 48 sacrament meetings per year for everything in this project.]{.aside} If you sang an opening, sacrament, intermediate, and closing hymn in all 48 of those meetings, that's 196 hymns. But, subtract 12 for Fast Sundays, which have no intermediate hymn. So, you're left with a maximum of 184 congregational hymns per year per ward. That's assuming zero special musical numbers ever.

Well, right off the bat, we know that you can't possibly get through the entire hymnal in a year, because there are 341 hymns! Even if you exclude the men's and women's arrangements in the back, [which are hardly ever sung](/posts/mens_womens_arrangements.qmd), and (for American wards) <hymn>God Save the King (#341)</hymn>, that's 310 hymns.

But, let's not forget that sacrament hymns almost always have to be one of the hymns in the 169--196 range. There are 28 of them. We'll assume you get through all 28 of them, but not all wards do because there are a few that are [clearly less popular than others](/posts/sacrament/index.html#frequency). So, 48 of your 184 hymns are tied up as sacrament hymns, some of which will have to be repeated. That leaves 136 remaining opening, intermediate, and closing hymn slots. If you didn't repeat any *and* had zero special musical numbers, then yes, you could sing 136 unique hymns, plus the 28 sacrament hymns, for a total of 164 unique hymns per year. That is the maximum any ward could do.

```{r}
nrow(freqs)
get_n_distinct_meetings()
(hymns_per_week <- nrow(freqs) / get_n_distinct_meetings())
```


If you really were determined to all 310 hymns without repeating, except for sacrament hymns, it would take 94 weeks to do so, or just shy of two years, under perfect conditions. But having special musical numbers and ward choirs makes it impossible to reach that goal. (And I'd encourage you to not deny people the opportunity to do a special musical number just so you can hit this goal!)

I currently have 63,307 hymns from 18,218 sacrament meetings. With this data, I can calculate how often wards typically sing intermediate hymns by simply dividing those two numbers. If the number is close to 3, then most wards sing 3 congregational hymns a week, meaning there's a special musical number or for whatever reason the intermediate hymn is not sung. If the number is close to 4, then most wards sing four congregational hymns: opening, sacrament, intermediate, and closing. As it turns out, it's around 3.47.

::: {.callout-tip icon="false"}
### Fun Fact

The average number of hymns sung in sacrament meeting is 3.47.
:::

This means that means---across my dataset---only about half of the time does a ward sing an intermediate hymn. If, across a few weeks or months, your ward has a lower number than that, then you have more special musical numbers than a typical ward. If your average is higher, it means you have fewer.

```{r}
48 * hymns_per_week
167 - 48
119 + 28
282 / (hymns_per_week - 1)
114 / 48
```


Let's recalculate our numbers then. If there are 48 weeks, and 3.47 hymns per week, that's a max of 167 (I'll round up) total hymns sung per ward per year. 48 of those are chewed up by the 28 sacrament hymns, so you're left with 119 slots for the rest of the hymnal. If you didn't repeat any and add back the 28 sacrament hymns, that's a max of 147 unique hymns per year. And if you're only able to get through 2.47 new hymns per week, and there are 282 non-sacrament hymns to get through, it would take 114 weeks to get through all of them, or just about two years and four months.

```{r}
wards_with_1_year <- freqs %>%
    count(ward, meeting_id) %>%
    count(ward) %>%
    filter(n > 48,
           !is.na(ward),
           ward != "Anonymous") %>%
    pull(ward) %>%
    print()
```


```{r}
bootstrap_hymns <- function(df) {
    meeting_id_sample <- df %>%
        pull(meeting_id) %>%
        unique() %>%
        sample(48, replace = FALSE)
    
    df %>%
        filter(meeting_id %in% meeting_id_sample) %>%
        pull(name_num) %>%
        unique() %>%
        length()
}

set.seed(1)
bootstrapped <- freqs %>%
    filter(ward %in% wards_with_1_year) %>%
    group_by(ward) %>%
    nest() %>%
    crossing(iteration = 1:100) %>%
    mutate(n_unique_hymns = map_int(data, bootstrap_hymns)) %>%
    select(-data) %>%
    group_by(ward) %>%
    summarize(across(n_unique_hymns, .fns = list(`mean` = mean, `min` = min, `max` = max, `sd` = sd))) %>%
    arrange(-n_unique_hymns_mean) %>%
    rowid_to_column("rank") %>%
    mutate(percentile = 1-(rank/max(rank))) %>%
    print() 
summary(bootstrapped)

```


## So how many hymns *do* wards sing per year?

::: {.callout-tip icon="false"}
### Fun Fact

Most wards sing around 105 unique hymns per year.
:::

::: {.callout-caution collapse="true"}
### Technical details for nerds :)

To get this number, I started off with the `r length(wards_with_1_year)` wards from which I have at least a year's worth of data. I didn't want to base the calculation on wards that contributed less data because it messes with the results.

But, even with these 108 wards, I can't simply divide the number of unique hymns by the number of sacrament meetings because the more data I have from a ward, the more likely they are to repeat hymns, especially common ones and around holidays. Yes, I am also more likely to see an unusual hymn if I have more data from them, but it seems like the repeated hymns has a stronger effect. It appears to follow some sort of exponential distribution.

```{r, include = TRUE, echo = FALSE, fig.height = 4}
freqs %>%
    filter(ward %in% wards_with_1_year) %>%
    group_by(ward) %>%
    summarize(unique_hymns = length(unique(name_num)),
              unique_meetings = length(unique(meeting_id))) %>%
    mutate(hymns_per_meeting = unique_hymns / unique_meetings,
            hymns_per_year = hymns_per_meeting * 48) %>%
    arrange(hymns_per_year) %>%
    rowid_to_column("rank") %>%
    print() %>%
    ggplot(aes(unique_meetings, hymns_per_year)) + 
    geom_point() + 
    scale_y_continuous(breaks = seq(0, 200, 20)) + 
    labs(title = "Number of unique hymns per year by how much data I have per ward",
         subtitle = "It appears to follow some sort of exponential curve!",
         x = "Unique meetings I have data from",
         y = "Unique hymns per year") + 
    theme_minimal()
```

So, because of *probability*, it's not meaningful to compare six years of data from one ward to one year of data from another ward.

I tried a rolling cumulative sum of unique hymns, but I didn't know how to implement that in R. So instead, I implemented a bootstrapping technique and sampled 48 meetings, without replacement, 100 times per ward, and got that average. The standard deviation was 3.16---a surprisingly narrow distribution if you ask me.
:::

Assuming about 24--28 of those are sacrament hymns, that means most wards only sing about 80 or so unique non-sacrament hymns per year. It appears then that another 28 of those 80 hymns are repeated each year.

The most variety of hymns I have in my dataset is 131 unique hymns per ward. That's pretty good, and certainly much better than average. The year with the least variety was one ward that sang just 66 unique hymns in a year. Considering that many of the holiday hymns aren't going to be repeated, it means that many (and perhaps most) of the non-festive hymns were repeated that year.

These numbers should be taken with a grain of salt because it's only based on 108 wards.[For what it's worth, a previous version of this blog post was written based on a much smaller sample of 20 wards. The numbers are more or less the same, which leads me to believe they're reasonably accurate.]{.aside} If you have access to a year's worth of data from your ward, please visit the [contribute](/contribute.qmd) page!

## Are there fewer intermediate hymns?

Someone suggested to me one time that the number of intermediate hymns we sing may have shifted once we switched to two-hour church (and thus a slightly shorter sacrament meeting). In their ward, they sense that intermediate hymns are being sung less, not because of more special musical numbers, but because it cut into the speakers' talks and there just wasn't enough time. 

```{r}
freqs %>%
    filter(!is.na(ward),
           !ward %in% c("Anonymous", "Foxcroft Ward")) %>%
    mutate(blocks = case_when(year == 2020 ~ "covid", 
                              year >= 2019 ~ "two-hour church", 
                              TRUE ~ "three-hour church")) %>%
    group_by(blocks) %>%
    summarize(n_hymns = n(),
              n_meetings = length(unique(meeting_id)),
              hymns_per_meeting = n_hymns / n_meetings) %>%
    print()
```

Oh! There may be a difference!

Let's look at that in more detail.

```{r}
freqs %>%
    filter(!is.na(ward),
           !ward %in% c("Anonymous", "Foxcroft Ward")) %>%
    mutate(month_year = lubridate::my(paste(month, year))) %>%
    group_by(month_year)  %>%
    summarize(
        unique_wards = length(unique(ward)),
        n_hymns = n(),
        n_meetings = length(unique(meeting_id)),
        hymns_per_meeting = n_hymns / n_meetings) %>%
    filter(unique_wards > 1) %>%
    print() %>%
    ggplot(aes(month_year, hymns_per_meeting)) +
    geom_vline(xintercept = as.Date("2019-01-01")) + 
    annotate(geom = "rect", xmin = as.Date("2020-03-15"), xmax = as.Date("2020-12-31"), ymin = 1, max = 4, 
             fill = "gray75", alpha = 0.5) + 
    # stat_smooth() +
    geom_point() + 
    scale_x_date(date_breaks = "1 year",
                 date_labels = "%y") + 
    theme_minimal()
```

```{r}
# explore the outliers
freqs %>%
    filter(year == 2018,
           month >= 6) %>%
    count(ward, meeting_id) %>%
    filter(n == 1) %>%
    count(ward) %>%
    print()

freqs %>%
    filter(ward == "Foxcroft Ward") %>%
    count(date) %>%
    ggplot(aes(date, n)) + 
    geom_point()

freqs %>%
    filter(ward == "Foxcroft Ward") %>%
    filter(year == 2018)
```

