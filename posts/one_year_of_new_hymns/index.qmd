---
title: "One Year of New Hymns"
author: "Joey Stanley"
date: "2025-06-03"
date-modified: last-modified
categories: 
  - general
  - new hymns
reference-location: margin
draft: TRUE
---

```{r, include = FALSE}
knitr::opts_chunk$set(include = FALSE,
                      echo = FALSE,
                      fig.width = 8)
rmarkdown::render("../../_scripts/analysis_functions.Rmd")

# Apply a date stamp
sf <- stamp("June 2", quiet = TRUE)

# get last Sunday
last_sunday <- ymd(floor_date(today(), "week"))
library(gtExtras)
```

It has been one year since the first batch of new hymns has been updated. In this post, I want to give a general overview of how these hymns have been used as congregational hymns in sacrament meeting. This will overlap partially with my dedicated posts on the [first](/posts/new_hymns_batch_1), [second](/posts/new_hymns_batch_2), and [third](/posts/new_hymns_batch_3) batches, but it also presents some new analyses now found in those posts.

```{r}
meetings_since_release1 <- freqs |> 
    filter(date <= last_sunday,
           date >= ymd("2024-06-02"),
           !date %in% ymd("2024-10-06",
                        "2025-04-06"))
meetings_since_release2 <- freqs |> 
    filter(date <= last_sunday,
           date >= ymd("2024-09-15"),
           !date %in% ymd("2024-10-06",
                        "2025-04-06"))
meetings_since_release3 <- freqs |> 
    filter(date <= last_sunday,
           date >= ymd("2025-02-16"),
           !date %in% ymd("2025-04-06"))

n_meetings_since_release1 <- meetings_since_release1 |> 
    distinct(meeting_id) |> 
    nrow()
n_meetings_since_release2 <- meetings_since_release2 |> 
    distinct(meeting_id) |> 
    nrow()
n_meetings_since_release3 <- meetings_since_release3 |> 
    distinct(meeting_id) |> 
    nrow()

n_wards_since_release1 <- meetings_since_release1 |> 
    filter(date <= ymd(last_sunday)) |> 
    pull(ward) |> 
    unique() |> 
    length()
n_wards_since_release2 <- meetings_since_release2 |> 
    filter(date <= ymd(last_sunday)) |> 
    pull(ward) |> 
    unique() |> 
    length()
n_wards_since_release3 <- meetings_since_release3 |> 
    filter(date <= ymd(last_sunday)) |> 
    pull(ward) |> 
    unique() |> 
    length()

n_weeks_since_release1 <- meetings_since_release1 |> 
    count(date) |> 
    nrow()
n_weeks_since_release2 <- meetings_since_release2 |> 
    count(date) |> 
    nrow()
n_weeks_since_release3 <- meetings_since_release3 |> 
    count(date) |> 
    nrow()
```


The data for this post is based on 

## Incorporation

First, let's talk about how often these hymns collectively have been sung in sacrament meetings. This plot



```{r, include = TRUE}
meetings_since_release3 |> 
    distinct(date, meeting_id) |> 
    count(date) |> 
    mutate(date = sf(date)) |> 
    rename(wards = n) |> 
    gt() |> 
    tab_header(title = "Number of wards I have data from, by week",
               subtitle = "Since February 16th")
```



## How many wards sang new hymns each week?

The following plot show what percentage of wards sang from each of the new batches of hymns, per week, since June 2024 when the new hymns started getting rolled out. I've included data from all three batches just so you can compare them to each other.

```{r, fig.height = 4, fig.width = 8}
count_new_hymns <- function(.category_name, .hymns) {
    meetings_since_release1 |> 
        mutate(is_new = hymn_num %in% .hymns) |>
        summarize(n_new = sum(is_new), .by = c(date, ward)) |>
        count(date, n_new) |>
        arrange(date) |>
        mutate(prop_new = n/sum(n), .by = date) |>
        mutate(n_new = as.factor(n_new)) |>
        mutate(category = .category_name) |>
        select(-n) |>
        pivot_wider(names_from = n_new, values_from = prop_new)
}
data_to_plot <- meetings_since_release1 |> 
    summarize(batch1 = sum(hymn_num %in% c(1001:1009, 1201:1204)) > 0,
              batch2 = sum(hymn_num %in% c(1010:1018)) > 0,
              batch3 = sum(hymn_num %in% c(1019:1031, 1205:1206)) > 0,
              .by = c(meeting_id, date)) |>
    mutate(none = !batch1 & !batch2 & !batch3) |>
    pivot_longer(cols = c(batch1, batch2, batch3, none), names_to = "batch", values_to = "present") |> 
    count(date, batch, present) |> 
    pivot_wider(names_from = present, values_from = n, values_fill = 0) |> 
    mutate(prop_sung = `TRUE`/(`TRUE` + `FALSE`)) |> 
    
    filter(!(batch == "batch3" & date < ymd("2025-02-13"))) |>
    # don't need batch 2 before Sep 15
    filter(!(batch == "batch2" & date < ymd("2024-09-15"))) |>
    # don't need batch 1 before Sep 15 either
    filter(!(batch == "batch1" & date < ymd("2024-06-02"))) |>
    print()
```



```{r, fig.height = 4, fig.width = 8}
# Get date breaks for this post.
date_minor_breaks <- tibble(weeks_since = 0:52,
                            date = last_sunday) |> 
    mutate(date = last_sunday - weeks_since*7) |> 
    filter(date >= "2024-06-02")
date_breaks <- date_minor_breaks |> 
    filter(weeks_since %% 3 == 0)
batch3_date_breaks <- date_minor_breaks |> 
    filter(weeks_since %% 2 == 0)
```


```{r}
labels <- tibble(
    batch = c("none", "batch1", "batch2", "batch3"),
    prop  = c(0.73, 0.26, 0.08, 0.04),
    date  = ymd(c("2025-04-01", "2025-02-14", "2025-01-25", "2025-03-15")),
    label = c("no new hymns", "batch 1", "batch 2", "batch 3"))

# Annotations
christmas_data_to_highlight <- data_to_plot |> 
    filter(batch %in% c("batch1", "batch2"),
           date >= "2024-12-01",
           date <= "2025-01-01") |> 
    mutate(label = "Christmas")
easter_data_to_highlight <- data_to_plot |> 
    filter(batch %in% c("batch1", "batch2"),
           date >= "2025-04-13",
           date <= "2025-04-27") |> 
    mutate(label = "Easter")
```


```{r, include = TRUE, fig.height = 5.5, fig.width = 14}
#| column: page
ggplot(data_to_plot, aes(date, prop_sung, group = batch, color = batch)) +
    
    # Christmas annotation
    ggforce::geom_mark_ellipse(data = christmas_data_to_highlight, group = 1, color = "gray50") + 
    annotate(geom = "text", x = ymd("2024-11-03"), y = 0.35, label = "Christmas", hjust = 1, color = "gray50") + 
    annotate(geom = "curve", color = "gray50",
             x = ymd("2024-11-05"), xend = ymd("2024-11-25"), y = 0.35, yend = 0.30,
             curvature = -0.25, arrow = arrow(length = unit(2, "mm"))) + 
    
    # Easter
    ggforce::geom_mark_ellipse(data = easter_data_to_highlight, group = 1, color = "gray50") +
    annotate(geom = "segment", color = "gray50",
             x = ymd("2025-04-20"), xend = ymd("2025-04-20"), y = 0.35, yend = 0.275, 
             arrow = arrow(length = unit(2, "mm"))) +
    annotate(geom = "text", x = ymd("2025-04-20"), y = 0.37, label = "Easter", hjust = 0.5, color = "gray50") +
    
    # Mother's Day
    annotate(geom = "segment", 
             x = ymd("2025-05-11"), xend = ymd("2025-05-11"), y = 0.28, yend = 0.18, 
             arrow = arrow(length = unit(2, "mm")), color = "gray50") +
    annotate(geom = "text", x = ymd("2025-05-11"), y = 0.29, label = "Mother's\nDay", 
             vjust = 0, hjust = 0.5, lineheight = 0.75, color = "gray50") +
    
    
    geom_path(linewidth = 1) +
    geom_point(size = 3) +
    geom_text(data = labels, aes(y = prop, label = label), hjust = 0.5, vjust = 0.5, size = 6) +
    
    
    scale_x_date(breaks = date_breaks$date,
                 minor_breaks = date_minor_breaks$date,
                 date_labels = "%b %d",
                 expand = expansion(0.02, 0)) +
    scale_y_continuous(expand = expansion(0, 0.02),
                       breaks = seq(0, 1, 0.1),
                       labels = scales::percent) +
    scale_color_manual(breaks = c("none", "batch1", "batch2", "batch3"),
                       values = c("gray66", "#1b9e77",  "#d95f02",  "#7570b3")) +
    labs(x = NULL,
         y = "percentage of wards",
         color = "number of new hymns",
         title = "Percentage of wards singing new hymns since June 2",
         subtitle = paste("Based on data from", comma(n_meetings_since_release1), "sacrament meetings from", comma(n_wards_since_release1), "wards"),
         fill = "date") + 
    theme_minimal(base_size = 16) +
    theme(legend.position = "none")
```


Same plot, but with the start times overlayed. 


## Popularity

How popular are each of the new hymns. Normalize to number of weeks of being available. Account for holidays. Account for sacrament hymns.