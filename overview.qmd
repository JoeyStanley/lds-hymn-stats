---
title: "Overview"
author: "Joey Stanley"
date: 2023-10-23
date-modified: last-modified
---

```{r, include = FALSE}
rmarkdown::render("_scripts/analysis_functions.Rmd")
library(kableExtra)
```

This page just has a summary of all the hymns and their frequency stats, including the new hymns. I will update this page regularly as I collect more data.

## Quick Facts

I currently have data from `r scales::comma(get_n_distinct_meetings())` sacrament meetings. If you were to attend that many, it would take about `r round(get_n_distinct_meetings()/48, 0)` years---so, more than a couple lifetimes' worth of data. It's also the equivalent of the entire 40-year lifetime of the 1985 hymnal in `r round(get_n_distinct_meetings()/48/40, 0)` wards. This data comes from `r scales::comma(length(unique(freqs$ward)))` wards, mostly in the United States. Across all these meetings, there are `r scales::comma(nrow(freqs))` hymns. See [here](/posts/frequency-data) for a detailed breakdown of how this data is distributed across time and space, as well as an explanation of where it call came from. 



## Frequency Table

Note that songs from the Children's Songbook are listed with their page number plus 2000. So, <hymn>We'll Bring the World His Truth</hymn> is on page 172 but I've listed it as hymn 2172. Also, when a non-English speaking ward sings a hymn that's not found in the English hymnal, I find the translation on Samuel Bradshaw's amazing [SingPraises.net](https://singpraises.net/collections?lang=nl&category=book) and sequentially number them in the order I see them starting with 500. So, if a ward sings <hymn>O, Canada</hymn>, it's listed here as hymn 501.

::: {.panel-tabset}

```{r, include = FALSE}
make_things_gray <- function(.df, .col) {
    .df |> 
        mutate(color = case_when(str_detect({{.col}}, "<") ~ "gray75",
                                 str_detect({{.col}}, ">") ~ "gray75",
                                 str_detect({{.col}}, "—") ~ "gray75",
                                 TRUE ~ "black")) |> 
        pull(color)
}

process_table <- function(.df) {
    data_to_show <- .df |> 
        mutate(hymn_num = paste0("#", hymn_num)) |> 
        mutate(n = if_else(is.na(n), 0, n),
               # with kable(escape = FALSE), this is supposed to work, I think, but it doesn't
               #hymn_name = str_replace(hymn_name, "\\[", "<span>["),
               #hymn_name = str_replace(hymn_name, "\\]", "]</span>"),
               across(c(every_x_weeks, every_x_months), ~case_when(. > 100 ~ ">100", 
                                                                   . < 10 ~ as.character(format(round(., 1), nsmall = 1)),
                                                                   . < 100 ~ as.character(round(.)),
                                                                   TRUE ~ "—")),
               avg_per_year = case_when(avg_per_year > 1 ~ as.character(format(round(avg_per_year, 2), nsmall = 2)),
                                        avg_per_year < 0.01 ~ "<0.01",
                                        avg_per_year < 0.05 ~ "<0.05",
                                        avg_per_year < 0.1 ~ "<0.1",
                                        avg_per_year < 0.5 ~ "<0.5",
                                        avg_per_year < 1 ~ "<1",
                                        TRUE ~ "—"),
               every_x_years = case_when(every_x_years < 1 ~ "<1",
                                         every_x_years < 10 ~ as.character(round(every_x_years, 1)),
                                         every_x_years < 100 ~ as.character(round(every_x_years)),
                                         every_x_years < 1000 ~ as.character(round(every_x_years/10)*10),
                                         TRUE ~ "—"))
        
    data_to_show |> 
        select(`#` = hymn_num,
           `Hymn` = hymn_name,
           `Times Sung` = n,
           `Avg per Year` = avg_per_year,
           `Every X Weeks` = every_x_weeks,
           `Every X Months` = every_x_months,
           `Every X Years`  = every_x_years) %>%
        
        # Make ties the same rank
        rowid_to_column("Rank") %>%
        mutate(Rank = min(Rank), .by = `Times Sung`) %>%
        # print()
        knitr::kable(align = "rrlrrrrr") |> 
        kable_styling(fixed_thead = TRUE) |> 
        scroll_box(height = "1080px") |> 
        column_spec(5, color = make_things_gray(data_to_show, avg_per_year)) |> 
        column_spec(6, color = make_things_gray(data_to_show, every_x_weeks)) |> 
        column_spec(7, color = make_things_gray(data_to_show, every_x_months)) |> 
        column_spec(8, color = make_things_gray(data_to_show, every_x_years))
}
```


### All data

```{r, include = TRUE, echo = FALSE}
freqs %>%
    cleveland_plot(return = "table") %>%
    mutate(hymn_num = as.numeric(as.character(hymn_num))) %>%
    full_join(name_num_lookup, by = c("hymn_name", "hymn_num")) %>%
    process_table()
```

### Before June 2024

```{r, echo = FALSE}
n_meetings_preJune2024 <- freqs %>%
    filter(date <= ymd("2024-06-01")) |> 
    pull(meeting_id) |> 
    unique() |> 
    length() |> 
    comma()
```


This table includes data from before any new hymns were introduced. It is likely the most informative, publicly-available view of the overall popularity of hymns in the 1985 hymnal. This table is based on data from `r n_meetings_preJune2024` sacrament meetings. 

```{r, include = TRUE, echo = FALSE}
freqs %>%
    filter(date <= ymd("2024-06-01")) |> 
    cleveland_plot(return = "table") %>%
    mutate(hymn_num = as.numeric(as.character(hymn_num))) %>%
    full_join(name_num_lookup, by = c("hymn_name", "hymn_num")) %>%
    process_table()
```


### Since June 2024

```{r, echo = FALSE}
n_meetings_sinceJune2024 <- freqs %>%
    filter(date >= ymd("2024-06-01")) |> 
    pull(meeting_id) |> 
    unique() |> 
    length() |> 
    comma()
```


This table includes data from sacrament meetings since June 2024 when the new hymns were released. I've given some approximate numbers for how popular they are. New hymns are highlighted in blue and orange. This table is based on data from `r n_meetings_sinceJune2024` sacrament meetings.

```{r, echo = FALSE}
weeks_since_june2 <- freqs |> 
    filter(date >= ymd("2024-06-01"),
           date <= ymd(today())) |> 
    pull(date) |> 
    unique() |> 
    length()
```


```{r, include = TRUE, echo = FALSE}
n_weeks_since_release <- freqs |> 
    filter(date >= ymd("2024-06-02"),
           date <= today()) |> 
    count(date) |> 
    nrow()
post_june_data <- freqs %>%
    filter(date >= ymd("2024-06-02"),
           date <= today()) |>
    
    # Because people are repeating 1001 now, I can't take it as the raw frequency. I'll have to remove duplicates.
    mutate(nth_time = row_number(), .by = c(ward, hymn_num)) |>
    filter(nth_time == 1) |>
    
    cleveland_plot(return = "table") %>%
    mutate(hymn_num = as.numeric(as.character(hymn_num))) %>%
    full_join(name_num_lookup, by = c("hymn_name", "hymn_num")) %>%
    # don't know children's songs or non-English songs in this section
    filter(!(hymn_num %in% c(500:999, 2000:3000) & is.na(n))) |>
    mutate(percent_wards = case_when(is.na(every_x_weeks) ~ "0%",
                                     n_weeks_since_release / every_x_weeks > 0.9 ~ "almost all",
                                     TRUE ~ scales::percent(round(n_weeks_since_release / every_x_weeks, 3))),
           hymn_num = paste0("#", hymn_num),
           pred_times_per_year = if_else(is.na(every_x_weeks),
                                         "—",
                                         format(round(avg_per_year, 2), nsmall = 1)))

# Get the rows of the new hymns so I can color them.
batch1_rows <- post_june_data |> 
    rowid_to_column("real_row") |> 
    filter(as.numeric(str_remove(hymn_num, "#")) %in% c(1001:1009, 1201:1204)) |> 
    pull(real_row)
batch2_rows <- post_june_data |> 
    rowid_to_column("real_row") |> 
    filter(as.numeric(str_remove(hymn_num, "#")) %in% 1010:1018) |> 
    pull(real_row)
batch3_rows <- post_june_data |> 
    rowid_to_column("real_row") |> 
    filter(as.numeric(str_remove(hymn_num, "#")) %in% c(1019:1031, 1205:1206)) |> 
    pull(real_row)

post_june_data |> 
    select(`#` = hymn_num,
           `Hymn` = hymn_name,
           `wards that have sung it` = percent_wards,
           `predicted times per year per ward` = pred_times_per_year) %>%

    # Make ties the same rank
    rowid_to_column("Rank") %>%
    mutate(Rank = min(Rank), .by = `wards that have sung it`) |> 
        #print()
    knitr::kable(align = "rrlrr") |> 
    kable_styling(fixed_thead = TRUE) |> 
    scroll_box(height = "1080px") |> 
    column_spec(5, color = make_things_gray(post_june_data, pred_times_per_year)) |> 
    row_spec(row = batch1_rows, background = "#b3cde3") |>  
    row_spec(row = batch2_rows, background = "#fbb4ae") |> 
    row_spec(row = batch3_rows, background = "#ccebc5")
```



:::


## Visualization

Here is the same information, but as a plot.

```{r, echo = FALSE, fig.height = 40, fig.width = 8}
freqs %>%
    cleveland_plot(return = "plot", 
                   subtitle = NULL,
                   x_buffer = 0) + 
    labs(title = "Frequency of all hymns",
         subtitle = NULL)
```

